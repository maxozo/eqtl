/*
========================================================================================
    Nextflow config file for running full-size tests
========================================================================================
    Defines input files and everything required to run a full size pipeline test.

    Use as follows:
        nextflow run nf-core/eqtl -profile test_full,<docker/singularity>

----------------------------------------------------------------------------------------
*/

params {
    method= 'single_cell' //or a [bulk | single_cell] (if single cell used the *phenotype_file* is a h5ad file)
    input_vcf ='/lustre/scratch123/hgi/projects/cardinal_analysis/analysed_reference_datasets/OneK1K/yascp_results/freeze2_results/clustering/Onek1k_88_subset.bcf.gz'
    genotype_phenotype_mapping_file = '/lustre/scratch123/hgi/projects/cardinal_analysis/analysed_reference_datasets/OneK1K/yascp_results/freeze2_results/clustering/donors.tsv' // annotation file containing Genotype | RNA and | Condiion
    annotation_file = 'https://yascp.cog.sanger.ac.uk/public/test_datasets/QTLight/Homo_sapiens.GRCh38.99.gtf' //assets file that has start and end positions for the genes, this one is using hg38
    phenotype_file = '/lustre/scratch123/hgi/projects/cardinal_analysis/analysed_reference_datasets/OneK1K/yascp_results/freeze2_results/clustering/subset_10000g.h5ad' //this should point to h5ad file in a single cell experiments, ensuring adata.X is raw counts

    aggregation_columns='Azimuth:predicted.celltype.l1' //for the scrna h5ad file define which annotations to use when aggregating the data. Can be one value or multiple comma separated values
    gt_id_column='Pool.Donor' //for the scrna h5ad defines which column has individual level id (corresponding to the VCF file)
    sample_column='Pool.Donor' // for the scrna h5ad defines which column has the sample name (can be identical to gt_id_column if sample=individual)
    n_min_individ = '3'
    split_aggregation_adata=true
    windowSize=250000
    aggregation_subentry='Mono'
}

process{
    withName: PHENOTYPE_PCs{
        cpus  = 1 
        time   = { 12.h   * task.attempt    } 
         memory = { 1.GB * task.attempt }
    }
    withName: SAIGE_S1{
        time   = { 12.h   * task.attempt    }
        maxRetries    = 3
        memory = { 6.GB * task.attempt }
    }
}